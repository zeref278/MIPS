.data

strIn: .asciiz "Nhap n(0<n<1000):"
strElement: .asciiz "Nhap phan tu: "
strE: .asciiz "Phan tu: "
strNl: .asciiz  "\n"

funct:  .asciiz "\t\tMenu\n"
funct1: .asciiz "1.Xuat ra cac phan tu\n"
funct2: .asciiz "2.Tinh tong cac phan tu\n"
funct3: .asciiz "3.Liet ke cac phan tu la so nguyen to\n"
funct4: .asciiz "4.Tim max\n"
funct5: .asciiz "5.Tim phan tu\n"
funct6: .asciiz "6.Thoat chuong trinh\n"

str1: .asciiz "Lua chon cua ban: "
strEr: .asciiz "Lua chon nhap khong hop le\n"
strX: .asciiz "Nhap X: "
msgFind: .asciiz "Vi tri: "
msgMax: .asciiz "Max la \n"
msgCantFind: .asciiz "Khong co phan tu can tim trong mang \n"
array: .word 0:999

.text
main:
	addi $v0, $0, 4
	la $a0, strIn
	syscall

	addi $v0, $0, 5
	syscall

	add $s0, $0, $v0 #
	add $a1,$0,$s0 #l?u n vào $a1

	slti $t0,$s0,1 #n?u $s0<1 thì $t0=1
	beq $t0,1,main

	sgt $t0,$s0,999 #	n?u $s0>999 thì $t0=1
	beq $t0,1,main


	addi $t0,$0,0 #con ch?y
	li $a2,4
	mul $a2,$a1,$a2

Input:
		
	beq $t0,$a2,ExitInput
		
	addi $v0, $0, 4
	la $a0, strElement
	syscall

	addi $v0, $0, 5
	syscall
		
	add $t2,$0,$v0

	sw $t2,array($t0)
	addi $t0,$t0,4

	j Input
	ExitInput:
Loop:
	addi $v0, $0, 4
	la $a0, funct
	syscall

	addi $v0, $0, 4
	la $a0, funct1
	syscall

	addi $v0, $0, 4
	la $a0, funct2
	syscall

	addi $v0, $0, 4
	la $a0, funct3
	syscall

	addi $v0, $0, 4
	la $a0, funct4
	syscall

	addi $v0, $0, 4
	la $a0, funct5
	syscall

	addi $v0, $0, 4
	la $a0, funct6
	syscall


	addi $v0, $0, 4 #in chu?i 
	la $a0, str1
	syscall

	addi $v0,$0,5 #??c vào l?a ch?n
	syscall

	add $s1,$0,$v0 #l?a ch?n l?u vào $s1
	addi $t0,$s1,-1

	bne $t0,$0,case2 #n?u !=1 thì ??n case2
	#x? lý =1
	addi $v0, $0, 4
	la $a0, funct1
	syscall
	#
	jal PrintArray
	
	#
	j EndOfCase

	case2:
		addi $t0,$s1,-2 
		bne $t0,$0,case3 #n?u !=2 thì ??n case3

		addi $v0, $0, 4
		la $a0, funct2
		syscall
		jal SumOfArray
		#
		j EndOfCase
	case3:
		addi $t0,$s1,-3
		bne $t0,$0,case4 #n?u !=3 thì ??n case4
		#x? lý =3
		addi $v0, $0, 4
		la $a0, funct3
		syscall
		jal PrintPrime
		#
		j EndOfCase
	case4:
		addi $t0,$s1,-4
		bne $t0,$0,case5 #n?u !=4 thì ??n case5
		#x? lý =4
		addi $v0, $0, 4
		la $a0, funct4
		syscall
		jal Max
		#
		j EndOfCase
	case5:
		addi $t0,$s1,-5
		bne $t0,$0,case6 #n?u !=5 thì ??n case6
		#x? lý =5
		addi $v0, $0, 4
		la $a0, funct5
		syscall
		jal FindX
		#
		j EndOfCase
	case6:
		addi $t0,$s1,-6
		bne $t0,$0,EndOfCase #n?u !=6 thì ??n EndOfCase
		#x? lý =6
		addi $v0, $0, 4
		la $a0, funct6
		li $v0, 10 
		syscall
		j Exit
		#
	

Exit:
addi $v0, $0, 10
syscall

PrintArray:
	li $t0, 0
	Loop1:

		beq $t0,$a2,ExitLoop1
		
		addi $v0, $0, 4
		la $a0, strE
		syscall
		
		lw $t2, array($t0)

		
		add $v0,$0,1
		add $a0,$0,$t2
		syscall
		addi $v0, $0, 4
		la $a0, strNl
		syscall
		
		addi $t0,$t0,4
		
		j Loop1
	ExitLoop1:
		jr $ra
	
SumOfArray:
	li $t0, 0
	Loop2:

		beq $t0, $a2, ExitLoop2
		lw $t3, array($t0)
		add $t1, $t1, $t3
		addi $t0,$t0, 4
		j Loop2

	ExitLoop2:
		add $v0,$0,1
		add $a0,$0,$t1
		syscall
		addi $v0, $0, 4
		la $a0, strNl
		syscall
		jr $ra
PrintPrime:
	li $t0, 0
	addi $sp, $sp, -8
	sw $ra, 4($sp)
	Loop3:
		
		beq $t0,$a2,ExitLoop3
		lw $t2, array($t0)

		jal checkPrime
		
		addi $v0, $0, 4
		la $a0, strE
		syscall
		
		add $v0,$0,1
		add $a0,$0,$t2
		syscall
		addi $v0, $0, 4
		la $a0, strNl
		syscall
		
		addi $t0,$t0,4
		
		j Loop3
	ExitLoop3:
		lw $ra, 4($sp)
		addi $sp, $sp, 8
		jr $ra
	checkPrime:
		li $t7, 2 
		li $t5, 3
		li $t3, 2
		LoopPrime:
			slt $t4 ,$t2, $t3
			addi $t0, $t0, 4
			beq $t4, 1, Loop3 
			addi $t0, $t0, -4
			beq $t2, 2, ExitLoopPrime
			beq $t5, $t2, ExitLoopPrime
			div $t2, $t7
			mfhi $t6

			addi $t0, $t0, 4
			beq $t6, 0, Loop3

			addi $t5, $t5, 1
			addi $t7, $t7, 1

			addi $t0, $t0, -4
			j LoopPrime
		ExitLoopPrime:
			jr $ra
Max:
	li $t0, 0
	lw $t1, array($t0)
	addi $t0, $t0, 4
	Loop4:
		lw $t3, array($t0)
 		slt $t2,$t1,$t3
		bne $t2, 0, Swap
		addi $t0, $t0, 4
		beq $t0, $a2, ExitLoop4
		j Loop4
	ExitLoop4:
		addi $v0, $0, 4
		la $a0, msgMax
		syscall
		add $v0, $0, 1
		add $a0, $0, $t1
		syscall
		jr $ra
	Swap:
		add $t1, $0, $t3
		j Loop4
FindX:
	li $t0, 0
	li $t1, 1
	li $t4, 0
	addi $v0, $0, 4
	la $a0, strX
	syscall
	addi $v0, $0, 5
	syscall
	move $t3, $v0
	Loop5:
		beq $t0, $a2, ExitLoop5
		
		lw $t2, array($t0)
		
		beq $t2, $t3, PrintPosition

		addi $t0, $t0, 4
		addi $t1, $t1, 1
		j Loop5
	ExitLoop5:
		beq $t4, 0, noFound
		jr $ra
	noFound:
		addi $v0, $0, 4
		la $a0, msgCantFind
		syscall
		addi $t4, $0, 1
		j ExitLoop5
	PrintPosition:
		addi $v0, $0, 4
		la $a0, msgFind
		syscall
		
		add $v0, $0, 1
		add $a0, $0, $t1
		syscall
		
		addi $v0, $0, 4
		la $a0, strNl
		syscall
		addi $t0, $t0, 4
		addi $t4, $0, 1
		j Loop5
	
EndOfCase:
j Loop


